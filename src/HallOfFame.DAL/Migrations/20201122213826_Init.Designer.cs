// <auto-generated />
using HallOfFame.DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HallOfFame.DAL.Migrations
{
    [DbContext(typeof(HallOfFameContex))]
    [Migration("20201122213826_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HallOfFame.Core.Entity.AreaPerson.AreaSkill.Skill", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("HallOfFame.Core.Entity.AreaPerson.AreaSkill.SkillOfLevel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<byte>("Level")
                        .HasColumnType("tinyint");

                    b.Property<long>("SkillId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("SkillId");

                    b.ToTable("SkillOfLevels");
                });

            modelBuilder.Entity("HallOfFame.Core.Entity.AreaPerson.AreaSkill.SkillOfPerson", b =>
                {
                    b.Property<long>("PersonId")
                        .HasColumnType("bigint");

                    b.Property<long>("SkillOfLevelId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.HasKey("PersonId", "SkillOfLevelId");

                    b.HasIndex("SkillOfLevelId");

                    b.ToTable("SkillOfPeoples");
                });

            modelBuilder.Entity("HallOfFame.Core.Entity.AreaPerson.Person", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("SurName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("People");
                });

            modelBuilder.Entity("HallOfFame.Core.Entity.AreaPerson.AreaSkill.SkillOfLevel", b =>
                {
                    b.HasOne("HallOfFame.Core.Entity.AreaPerson.AreaSkill.Skill", "Skill")
                        .WithMany("SkillOfLevels")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HallOfFame.Core.Entity.AreaPerson.AreaSkill.SkillOfPerson", b =>
                {
                    b.HasOne("HallOfFame.Core.Entity.AreaPerson.Person", "Person")
                        .WithMany("SkillsOfPersons")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HallOfFame.Core.Entity.AreaPerson.AreaSkill.SkillOfLevel", "SkillOfLevel")
                        .WithMany("SkillsOfPersons")
                        .HasForeignKey("SkillOfLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
